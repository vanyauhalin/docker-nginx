name: Release a Docker image

permissions:
  attestations: write
  contents: read
  id-token: write
  packages: write

on:
  push:
    tags:
    - v*

env:
  IMAGE_LABELS: ""
  IMAGE_NAME: ""

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Log in to the container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Extract the image name from the Dockerfile
      run: |
        t=$(grep "LABEL org.opencontainers.image.title=" Dockerfile)
        v=$(echo "$t" | cut --delimiter="=" --fields=2- | sed "s/\"//g")
        echo "IMAGE_NAME=$v" >> "$GITHUB_ENV"

    - name: Extract labels from the Dockerfile
      run: |
        echo "IMAGE_LABELS<<EOF" >> "$GITHUB_ENV"
        while IFS= read -r c; do
          case "$c" in
          LABEL*)
            c=$(echo "$c" | sed "s/^LABEL[[:space:]]*//")
            n=$(echo "$c" | cut --delimiter="=" --fields=1)
            v=$(echo "$c" | cut --delimiter="=" --fields=2- | sed "s/\"//g")
            echo "$n=$v" >> "$GITHUB_ENV"
            ;;
          esac
        done < Dockerfile
        echo "EOF" >> "$GITHUB_ENV"

    - name: Extract metadata for Docker
      id: docker
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{github.actor}}/${{env.IMAGE_NAME}}
        labels: ${{env.IMAGE_LABELS}}

    - name: Build and push the Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{steps.docker.outputs.tags}}
        labels: ${{steps.docker.outputs.labels}}

    - name: Generate an artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{github.actor}}/${{env.IMAGE_NAME}}
        subject-digest: ${{steps.push.outputs.digest}}
        push-to-registry: true
